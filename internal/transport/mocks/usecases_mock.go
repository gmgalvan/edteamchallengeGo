// Code generated by MockGen. DO NOT EDIT.
// Source: gmgalvan/edChallenge2021/internal/transport (interfaces: Usecases)

// Package mocks is a generated GoMock package.
package mocks

import (
	schema "gmgalvan/edChallenge2021/internal/schema"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsecases is a mock of Usecases interface.
type MockUsecases struct {
	ctrl     *gomock.Controller
	recorder *MockUsecasesMockRecorder
}

// MockUsecasesMockRecorder is the mock recorder for MockUsecases.
type MockUsecasesMockRecorder struct {
	mock *MockUsecases
}

// NewMockUsecases creates a new mock instance.
func NewMockUsecases(ctrl *gomock.Controller) *MockUsecases {
	mock := &MockUsecases{ctrl: ctrl}
	mock.recorder = &MockUsecasesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecases) EXPECT() *MockUsecasesMockRecorder {
	return m.recorder
}

// RetrieveChart mocks base method.
func (m *MockUsecases) RetrieveChart(arg0 *schema.Ticker) (*schema.Chart, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveChart", arg0)
	ret0, _ := ret[0].(*schema.Chart)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveChart indicates an expected call of RetrieveChart.
func (mr *MockUsecasesMockRecorder) RetrieveChart(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveChart", reflect.TypeOf((*MockUsecases)(nil).RetrieveChart), arg0)
}
